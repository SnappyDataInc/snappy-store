/**
 * Autogenerated by Thrift Compiler (0.9.1)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package com.pivotal.gemfirexd.thrift;


import java.util.Map;
import java.util.HashMap;
import org.apache.thrift.TEnum;

public enum GFXDType implements org.apache.thrift.TEnum {
  BOOLEAN(1),
  TINYINT(2),
  SMALLINT(3),
  INTEGER(4),
  BIGINT(5),
  FLOAT(6),
  REAL(7),
  DOUBLE(8),
  DECIMAL(9),
  CHAR(10),
  VARCHAR(11),
  LONGVARCHAR(12),
  DATE(13),
  TIME(14),
  TIMESTAMP(15),
  BINARY(16),
  VARBINARY(17),
  LONGVARBINARY(18),
  NULLTYPE(19),
  OTHER(20),
  JAVA_OBJECT(21),
  DISTINCT(22),
  STRUCT(23),
  ARRAY(24),
  BLOB(25),
  CLOB(26),
  REF(27),
  DATALINK(28),
  ROWID(29),
  NCHAR(30),
  NVARCHAR(31),
  LONGNVARCHAR(32),
  NCLOB(33),
  SQLXML(34),
  PDX_OBJECT(35),
  JSON_OBJECT(36);

  private final int value;

  private GFXDType(int value) {
    this.value = value;
  }

  /**
   * Get the integer value of this enum value, as defined in the Thrift IDL.
   */
  public int getValue() {
    return value;
  }

  /**
   * Find a the enum type by its integer value, as defined in the Thrift IDL.
   * @return null if the value is not found.
   */
  public static GFXDType findByValue(int value) { 
    switch (value) {
      case 1:
        return BOOLEAN;
      case 2:
        return TINYINT;
      case 3:
        return SMALLINT;
      case 4:
        return INTEGER;
      case 5:
        return BIGINT;
      case 6:
        return FLOAT;
      case 7:
        return REAL;
      case 8:
        return DOUBLE;
      case 9:
        return DECIMAL;
      case 10:
        return CHAR;
      case 11:
        return VARCHAR;
      case 12:
        return LONGVARCHAR;
      case 13:
        return DATE;
      case 14:
        return TIME;
      case 15:
        return TIMESTAMP;
      case 16:
        return BINARY;
      case 17:
        return VARBINARY;
      case 18:
        return LONGVARBINARY;
      case 19:
        return NULLTYPE;
      case 20:
        return OTHER;
      case 21:
        return JAVA_OBJECT;
      case 22:
        return DISTINCT;
      case 23:
        return STRUCT;
      case 24:
        return ARRAY;
      case 25:
        return BLOB;
      case 26:
        return CLOB;
      case 27:
        return REF;
      case 28:
        return DATALINK;
      case 29:
        return ROWID;
      case 30:
        return NCHAR;
      case 31:
        return NVARCHAR;
      case 32:
        return LONGNVARCHAR;
      case 33:
        return NCLOB;
      case 34:
        return SQLXML;
      case 35:
        return PDX_OBJECT;
      case 36:
        return JSON_OBJECT;
      default:
        return null;
    }
  }
}
