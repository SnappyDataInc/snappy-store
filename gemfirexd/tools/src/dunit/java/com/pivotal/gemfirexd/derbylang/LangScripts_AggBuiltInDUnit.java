/*
 * Copyright (c) 2010-2015 Pivotal Software, Inc. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you
 * may not use this file except in compliance with the License. You
 * may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing
 * permissions and limitations under the License. See accompanying
 * LICENSE file.
 */
package com.pivotal.gemfirexd.derbylang;

import java.sql.Connection;
import java.sql.Statement;

import org.apache.derbyTesting.junit.JDBC;

import com.pivotal.gemfirexd.DistributedSQLTestBase;
import com.pivotal.gemfirexd.TestUtil;

public class LangScripts_AggBuiltInDUnit extends DistributedSQLTestBase {

	  public LangScripts_AggBuiltInDUnit(String name) {
	    super(name);
	  }
	  
	  // This test is the as-is LangScript conversion, without any partitioning clauses
	  public void testLangScript_AggBuiltInDUnitTest() throws Exception
	  {
	    // This is a JUnit conversion of the Derby Lang aggbuiltin.sql script
	    // without any GemFireXD extensions
		  
	    // Catch exceptions from illegal syntax
	    // Tests still not fixed marked FIXME
		  
	    // Array of SQL text to execute and sqlstates to expect
	    // The first object is a String, the second is either 
	    // 1) null - this means query returns no rows and throws no exceptions
	    // 2) a string - this means query returns no rows and throws expected SQLSTATE
	    // 3) a String array - this means query returns rows which must match (unordered) given resultset
	    //       - for an empty result set, an uninitialized size [0][0] array is used
	    Object[][] Script_AggBuiltInUT = {
		// create an all types tables
		{ "create table t (i int, s smallint, l bigint,	c char(10), v varchar(50), lvc long varchar, d double precision, r real, dt date, t time, ts timestamp, b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data, dc decimal(5,2))", null},
		{ "create table empty (i int, s smallint, l bigint, c char(10), v varchar(50), lvc long varchar, d double precision, r real, dt date, t time, ts timestamp, b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data, dc decimal(5,2))", null},
		{ "insert into t (i) values (null)", null},
		{ "insert into t (i) values (null)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', x'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (1, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 200, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 222.22)", null},
		{ "insert into t values (0, 100, 2000000, 'duplicate', 'this is duplicated', 'also duplicated', date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 222.22)", "42802"},
		{ "insert into t values (0, 100, 1000000, 'goodbye', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'noone is here', 'jimmie noone was here', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 100.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 100.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-09-09'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:55:55'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:55:55'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'ffff', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'1111111111111111', X'1234', 111.11)", null},
		// cannot aggregate datatypes that don't support NumberDataValue
		{ "select avg(c) from t", "42Y22"},
		{ "select avg(v) from t", "42Y22"},
		{ "select avg(lvc) from t", "42Y22"},
		{ "select avg(dt) from t", "42Y22"},
		{ "select avg(t) from t", "42Y22"},
		{ "select avg(ts) from t", "42Y22"},
		{ "select avg(b) from t", "42Y22"},
		{ "select avg(bv) from t", "42Y22"},
		{ "select avg(lbv) from t", "42Y22"},
		{ "select avg(c) from t group by c", "42Y22"},
		{ "select avg(v) from t group by c", "42Y22"},
		{ "select avg(lvc) from t group by c", "42Y22"},
		{ "select avg(dt) from t group by c", "42Y22"},
		{ "select avg(t) from t group by c", "42Y22"},
		{ "select avg(ts) from t group by c", "42Y22"},
		{ "select avg(b) from t group by c", "42Y22"},
		{ "select avg(bv) from t group by c", "42Y22"},
		{ "select avg(lbv) from t group by c", "42Y22"},
		// long varchar datatypes too
		{ "create table t1 (c1 long varchar)", null },
		{ "select avg(c1) from t1", "42Y22" },
		{ "drop table t1", null },
		// constants
		{ "select avg('hello') from t", "42Y22" },
		{ "select avg(X'11') from t", "42Y22" },
		{ "select avg(date('1999-06-06')) from t", "42Y22" },
		{ "select avg(time('12:30:30')) from t", "42Y22" },
		{ "select avg(timestamp('1999-06-06 12:30:30')) from t", "42Y22" },
		// NULL AGGREGATION
		{ "select avg(i) from empty", new String [][] { {null} } },
		{ "select avg(s) from empty", new String [][] { {null} } },
		{ "select avg(d) from empty", new String [][] { {null} } },
		{ "select avg(l) from empty", new String [][] { {null} } },
		{ "select avg(r) from empty", new String [][] { {null} } },
		{ "select avg(dc) from empty", new String [][] { {null} } },
		{ "select avg(i), avg(s), avg(r), avg(l) from empty", new String [][] { {null,null,null,null} } },
		{ "select avg(i+1) from empty", new String [][] { {null} } },
		{ "select avg(i) from empty group by i", new String[0][0] },
		{ "select avg(s) from empty group by s", new String[0][0] },
		{ "select avg(d) from empty group by d", new String[0][0] },
		{ "select avg(l) from empty group by l", new String[0][0] },
		{ "select avg(r) from empty group by r", new String[0][0] },
		{ "select avg(dc) from empty group by dc", new String[0][0] },
		// BASIC ACCEPTANCE TESTS
		{ "select avg(i) from t", new String [][] { {"0"} } },   // ignore the WARNINGs given
		{ "select avg(s) from t", new String [][] { {"107"} } },
		{ "select avg(d) from t", new String [][] { {"192.85714285714286"} } },
		{ "select avg(l) from t", new String [][] { {"1000000"} } },
		{ "select avg(r) from t", new String [][] { {"192.85714285714286"} } },
		{ "select avg(dc) from t", new String [][] { {"119.0464"} } },
		{ "select avg(i) from t group by i", new String [][] { {"0"}, {"1"}, {null} } },
		{ "select avg(s) from t group by s", new String [][] { {"100"}, {"200"}, {null} } },
		{ "select avg(d) from t group by d", new String [][] { {"100.0"}, {"200.0"}, {null} } },
		{ "select avg(l) from t group by l", new String [][] { {"1000000"}, {null} } },
		{ "select avg(r) from t group by r", new String [][] { {"100.0"}, {"200.0"}, {null} } },
		{ "select avg(dc), sum(dc), count(dc) from t group by dc", new String [][] {
	           {"111.1100","1444.43","13"}, 
	           {"222.2200","222.22","1"},
	           {null,null,"0"} } },
		// -- constants
		{ "select avg(1) from t", new String [][] { {"1"} } },
		// FIXME
		// If these statements all have one space between AVG() call and FROM, they reuse same prepared statement
		// and throw casting error. Only happens with prepared statements, not on GFXD
		{ "select avg(1.1)    from t", new String [][] { {"1.1000"} } },
		{ "select avg(1e1)  from t", new String [][] { {"10.0"} } },
		{ "select avg(1) from t group by i", new String [][] { {"1"},{"1"},{"1"} } },
		{ "select avg(1.1)  from t group by r", new String [][] { {"1.1000"},{"1.1000"},{"1.1000"} } },
		{ "select avg(1e1)   from t group by r", new String [][] { {"10.0"},{"10.0"},{"10.0"} } },
		//  multicolumn grouping
		{ "select avg(i), avg(l), avg(r) from t group by i, dt, b", new String [][] {
			{"0","1000000","190.9090909090909"},
			{"0","1000000","200.0"},
			{"0","1000000","200.0"},        
			{"1","1000000","200.0"},
			{null, null, null} } },
		{ "select i, dt, avg(i), avg(r), avg(l), l from t group by i, dt, b, l", new String [][] {
			{"0","1992-01-01","0","190.9090909090909","1000000","1000000"},
			{"0","1992-01-01","0","200.0","1000000","1000000"},
			{"0","1992-09-09","0","200.0","1000000","1000000"},
			{"1","1992-01-01","1","200.0","1000000","1000000"},
			{null, null, null, null, null, null} } },
		{ "select avg(expr1), avg(expr2) from (select i * s, r * 2 from t) t (expr1, expr2) group by expr2, expr1", new String [][] {
			{"0","200.0"}, {"0","400.0"}, {"100","400.0"}, {null,null} } },
		{ "select distinct avg(i) from t group by i, dt", new String[][] { {"0"},{"1"},{null} } },
		{ "create table tmp (x int, y smallint)", null },
		//{ "insert into tmp (x, y) select avg(i), avg(s) from t", null },   // not supported : subselect w/aggregation on partitioned table
		//{ "select * from tmp", new String [][] { {"0","107"} } },
		//{ "insert into tmp (x, y) select avg(i), avg(s) from t group by b", null },
		//{ "select * from tmp", new String [][] { {"0","107"}, {"0","107"}, {"0","100"}, {null,null} } },
		{ "drop table tmp", null },
		{ "create table tmp (x int)", null },
		{ "insert into tmp values (2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647)", null },
		{ "select avg(x) from tmp", new String [][] { {"2147483647"} } },
		{ "select avg(-(x - 1)) from tmp", new String [][] { {"-2147483646"} } },
		{ "select avg(x) from tmp group by x", new String [][] { {"2147483647"} } },
		{ "select avg(-(x - 1)) from tmp group by x", new String [][] { {"-2147483646"} } },
		{ "drop table tmp", null},
		{ "create table tmp(x double precision, y int)", null },
		{ "insert into tmp values (1,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"1.0" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"1.0"} } },
		{ "insert into tmp values (2,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"1.5" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"1.5"} } },
		{ "insert into tmp values (3,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"2.0" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"2.0"} } },
		{ "insert into tmp values (4,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"2.5" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"2.5"} } },
		{ "insert into tmp values (5,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"3.0" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"3.0"} } },
		{ "insert into tmp values (6,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"3.5" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"3.5"} } },
		{ "insert into tmp values (7,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"4.0" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"4.0"} } },
		{ "insert into tmp values (10000,1)", null },
		{ "select avg(x) from tmp", new String [][] { {"1253.5" } } },
		{ "select avg(x) from tmp group by y", new String [][] { {"1253.5"} } },
		{ "drop table tmp", null },
		{ "drop table t", null },
		{ "drop table empty", null },
		// COUNT
		{ "create table t (i int, s smallint, l bigint,	c char(10), v varchar(50), lvc long varchar, d double precision, r real, dt date, t time, ts timestamp, b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data, dc decimal(5,2))", null},
		{ "create table empty (i int, s smallint, l bigint, c char(10), v varchar(50), lvc long varchar, d double precision, r real, dt date, t time, ts timestamp, b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data, dc decimal(5,2))", null},
		{ "insert into t (i) values (null)", null},
		{ "insert into t (i) values (null)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', x'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (1, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 200, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 222.22)", null},
		{ "insert into t values (0, 100, 2000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 222.22)", null},
		{ "insert into t values (0, 100, 1000000, 'goodbye', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'noone is here', 'jimmie noone was here', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 100.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 100.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-09-09'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:55:55'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:55:55'), X'12af', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'ffff', X'0000111100001111', X'1234', 111.11)", null},
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'1111111111111111', X'1234', 111.11)", null},
		// NULL AGGREGATION
		{ "select count(i) from empty", new String [][] { {"0" } } },
		{ "select count(s) from empty", new String [][] { {"0" } } },
		{ "select count(l) from empty", new String [][] { {"0" } } },
		{ "select count(c) from empty", new String [][] { {"0" } } },
		{ "select count(v) from empty", new String [][] { {"0" } } },
		{ "select count(lvc) from empty", new String [][] { {"0" } } },
		{ "select count(d) from empty", new String [][] { {"0" } } },
		{ "select count(r) from empty", new String [][] { {"0" } } },
		{ "select count(dt) from empty", new String [][] { {"0" } } },
		{ "select count(t) from empty", new String [][] { {"0" } } },
		{ "select count(ts) from empty", new String [][] { {"0" } } },
		{ "select count(b) from empty", new String [][] { {"0" } } },
		{ "select count(bv) from empty", new String [][] { {"0" } } },
		{ "select count(lbv) from empty", new String [][] { {"0" } } },
		{ "select count(dc) from empty", new String [][] { {"0" } } },
		{ "select count(i), count(b), count(i), count(s) from empty", new String [][] {
	        {"0","0","0","0"} } },
		{ "select count(i+1) from empty", new String [][] { {"0"} } },
		{ "select count(i) from empty group by i", new String [0][0] },
		{ "select count(s) from empty group by s", new String [0][0] },
		{ "select count(l) from empty group by l", new String [0][0] },
		{ "select count(c) from empty group by c", new String [0][0] },
		{ "select count(v) from empty group by v", new String [0][0] },
		{ "select count(d) from empty group by d", new String [0][0] },
		{ "select count(r) from empty group by r", new String [0][0] },
		{ "select count(dt) from empty group by dt", new String [0][0] },
		{ "select count(t) from empty group by t", new String [0][0] },
		{ "select count(ts) from empty group by ts", new String [0][0] },
		{ "select count(b) from empty group by b", new String [0][0] },
		{ "select count(bv) from empty group by bv", new String [0][0] },
		{ "select count(lbv) from empty group by lbv", "X0X67" },
		{ "select count(dc) from empty group by dc", new String [0][0] },
		{ "select count(i) from t", new String [][] { {"15"} } },
		{ "select count(s) from t", new String [][] { {"15"} } },
		{ "select count(l) from t", new String [][] { {"15"} } },
		{ "select count(c) from t", new String [][] { {"15"} } },
		{ "select count(v) from t", new String [][] { {"15"} } },
		{ "select count(lvc) from t", new String [][] { {"15"} } },
		{ "select count(d) from t", new String [][] { {"15"} } },
		{ "select count(r) from t", new String [][] { {"15"} } },
		{ "select count(dt) from t", new String [][] { {"15"} } },
		{ "select count(t) from t", new String [][] { {"15"} } },
		{ "select count(ts) from t", new String [][] { {"15"} } },
		{ "select count(b) from t", new String [][] { {"15"} } },
		{ "select count(bv) from t", new String [][] { {"15"} } },
		{ "select count(lbv) from t", new String [][] { {"15"} } },
		{ "select count(dc) from t", new String [][] { {"15"} } },
		{ "select count(i) from t group by i", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(s) from t group by s", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(l) from t group by l", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(c) from t group by c", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(v) from t group by v", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(d) from t group by d", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(r) from t group by r", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(dt) from t group by dt", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(t) from t group by t", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(ts) from t group by ts", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(b) from t group by b", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(bv) from t group by bv", new String [][] { {"14"}, {"1"}, {"0"} } },
		{ "select count(lbv) from t group by lbv", "X0X67" },
		{ "select count(dc) from t group by dc", new String [][] { {"13"}, {"2"}, {"0"} } },
		{ "select count(1) from t", new String[][] { {"17"} } },
		{ "select count('hello')  from t", new String[][] { {"17"} } },
		{ "select count(1.1)   from t", new String[][] { {"17"} } },
		{ "select count(1e1)    from t", new String[][] { {"17"} } },
		{ "select count(X'11')     from t", new String[][] { {"17"} } },
		{ "select count(date('1999-06-06')) from t", new String[][] { {"17"} } },
		{ "select count(time('12:30:30')) from t", new String[][] { {"17"} } },
		{ "select count(timestamp('1999-06-06 12:30:30')) from t", new String[][] { {"17"} } },
		{ "select count(1) from t group by i", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count('hello')  from t group by c", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(1.1)   from t group by dc", new String[][] { {"13"}, {"2"}, {"2"} } },
		{ "select count(1e1)    from t group by r", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(X'11')     from t group by b", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(date('1999-06-06')) from t group by dt", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(time('12:30:30')) from t group by t", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(timestamp('1999-06-06 12:30:30')) from t group by ts", new String[][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(i), count(dt), count(b) from t group by i, dt, b", new String[][] {
			{"12","12","12"}, {"1","1","1"}, {"1","1","1"}, {"1","1","1"}, {"0","0","0"} } },
		{ "select l, dt, count(i), count(dt), count(b), i from t group by i, dt, b, l", new String [][] {
			{"1000000", "1992-01-01", "11", "11", "11", "0"},
			{"2000000", "1992-01-01", "1", "1", "1", "0"},
			{"1000000", "1992-01-01", "1", "1", "1", "0"},
			{"1000000", "1992-09-09", "1", "1", "1", "0"},
			{"1000000", "1992-01-01", "1", "1", "1", "1"},
	         	{null,null,"0","0","0",null} } },
		{ "select count(expr1), count(expr2) from (select i * s, c || v from t) t (expr1, expr2) group by expr2, expr1", new String [][] {
			{"1", "1"}, {"12", "12"}, {"1","1"}, {"1","1"}, {"0","0"} } },
		// FIXME this gets 5 rows - maybe getting a warning about ignored nulls? Does not repro outside of dunit
		//{ "select distinct count(i) from t group by i, dt", new String [][] { {"0"}, {"1"}, {"13"} } },
		{ "create table tmp (x int, y smallint)", null },
		//{ "insert into tmp (x, y) select count(i), count(c) from t", null },  // Not supported : insert from subselect to partitioned
		//{ "select * from tmp", new String [][] { {"15", "15"} } },
		//{ "insert into tmp (x, y) select count(i), count(c) from t group by b", null },
		//{ "select * from tmp", new String [][] { {"15", "15"}, {"14", "14"}, {"1", "1"}, {"0","0"} } },
		{ "drop table tmp", null },
		{ "drop table t", null },
		{ "drop table empty", null },
		// Test the COUNT() aggregate
		{ "create table t (i int, s smallint, l bigint,	c char(10), v varchar(50), lvc long varchar, d double precision, r real, dt date, t time, ts timestamp,	b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data)", null },
		{ "create table empty (i int, s smallint, l bigint,	c char(10), v varchar(50), lvc long varchar, d double precision, r real, dt date, t time, ts timestamp,	b char(2) for bit data, bv varchar(8) for bit data, lbv long varchar for bit data)", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated',  200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'),  X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000,  'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (1, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated',  200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 200, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 2000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'goodbye', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'noone is here', 'jimmie noone was here', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 100.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 100.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-09-09'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:55:55'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:55:55'), X'12af', X'0000111100001111', X'ABCD')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'ffff', X'0000111100001111', X'1234')", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 'also duplicated',200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'1111111111111111', X'ABCD')", null },
		{ "select count(*) from empty", new String [][] { {"0"} } },
		{ "select count(*), count(*) from empty", new String [][] { {"0","0"} } },
		{ "select count(*) from empty group by i", new String [0][0] },
		{ "select count(*) from t", new String [][] { {"17"} } },
		{ "select count(*) from t group by i", new String [][] { {"14"}, {"1"}, {"2"} } },
		{ "select count(*), count(*), count(*) from t group by i, dt, b", new String[][] {
			{"12","12","12"}, {"1","1","1"}, {"1","1","1"}, {"1","1","1"}, {"2","2","2"} } },
		{ "select count(*), count(*) from (select i * s, c || v from t) t (expr1, expr2) group by expr2, expr1", new String [][] {
			{"1","1"}, {"12","12"}, {"1","1"}, {"1","1"}, {"2","2"} } },
		// FIXME returns incorrect results
		//{ "select distinct count(*) from t group by i, dt", new String [][] { {"1"}, {"2"}, {"13"} } },
		{ "create view v1 as select * from t", null },
		{ "select count(*) from v1", new String [][] { {"17"} } },
		{ "select count(*)+count(*) from v1", new String [][] { {"34"} } },
		{ "drop view v1", null }, 
		{ "create table tmp (x int, y smallint)", null },
		//{ "insert into tmp (x, y) select count(*), count(*) from t", null },  // not supported on partitioned regions
		//{ "select * from tmp", new String [][] { {"17","17"} } },
		//{ "insert into tmp (x, y) select count(*), count(*) from t group by b", null },
		//{ "select * from tmp", new String [][] { {"17","17"}, {"14","14"}, {"1","1"}, {"2","2"} } },
		{ "drop table tmp", null },
		{ "drop table t", null },
		{ "drop table empty", null },
		// SUM
		{ "create table t (i int, s smallint, l bigint, c char(10), v varchar(50), d double precision, r real, dt date, t time, ts timestamp,	b char(2) for bit data, bv varchar(8) for bit data, dc decimal(5,2))", null },
		{ "create table empty (i int, s smallint, l bigint, c char(10), v varchar(50), d double precision, r real, dt date, t time, ts timestamp,	b char(2) for bit data, bv varchar(8) for bit data, dc decimal(5,2))", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (1, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 200, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 222.22)", null },
		{ "insert into t values (0, 100, 2000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0,  date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 222.22)", null },
		{ "insert into t values (0, 100, 1000000,'goodbye', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'noone is here', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000,'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'),X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000,'duplicate', 'this is duplicated', 100.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000,'duplicate', 'this is duplicated', 200.0e0, 100.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-09-09'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0,  date('1992-01-01'), time('12:55:55'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:55:55'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'ffff', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'1111111111111111', 111.11)", null },
		// cannot aggregate datatypes that don't support NumberDataValue
		{ "select sum(c) from t", "42Y22" },
		{ "select sum(v) from t", "42Y22" },
		{ "select sum(dt) from t", "42Y22" },
		{ "select sum(t) from t", "42Y22" },
		{ "select sum(ts) from t", "42Y22" },
		{ "select sum(b) from t", "42Y22" },
		{ "select sum(bv) from t", "42Y22" },
		{ "select sum(c) from t group by c", "42Y22" },
		{ "select sum(v) from t group by c", "42Y22" },
		{ "select sum(dt) from t group by c", "42Y22" },
		{ "select sum(t) from t group by c", "42Y22" },
		{ "select sum(ts) from t group by c", "42Y22" },
		{ "select sum(b) from t group by c", "42Y22" },
		{ "select sum(bv) from t group by c", "42Y22" },
		{ "create table t1 (c1 long varchar)", null },
		{ "select sum(c1) from t1", "42Y22" },
		{ "drop table t1", null },
		// constants
		{ "select sum('hello') from t", "42Y22" },
		{ "select sum(X'11')  from t", "42Y22" },
		{ "select sum(date('1999-06-06')) from t", "42Y22" },
		{ "select sum(time('12:30:30')) from t", "42Y22" },
		{ "select sum(timestamp('1999-06-06 12:30:30')) from t", "42Y22" },
		{ "select sum(i) from empty", new String [][] { {null} } },
		{ "select sum(s) from empty", new String [][] { {null} } },
		{ "select sum(d) from empty", new String [][] { {null} } },
		{ "select sum(l) from empty", new String [][] { {null} } },
		{ "select sum(r) from empty", new String [][] { {null} } },
		{ "select sum(dc) from empty", new String [][] { {null} } },
		{ "select sum(i), sum(s), sum(r), sum(l) from empty", new String [][] { {null,null,null,null} } },
		{ "select sum(i+1) from empty", new String [][] { {null} } },
		{ "select sum(i) from empty group by i", new String [0][0] },
		{ "select sum(s) from empty group by s", new String [0][0] },
		{ "select sum(d) from empty group by d", new String [0][0] },
		{ "select sum(l) from empty group by l", new String [0][0] },
		{ "select sum(r) from empty group by r", new String [0][0] },
		{ "select sum(dc) from empty group by dc", new String [0][0] },
		{ "select sum(i) from t", new String [][] { {"1"} } },
		{ "select sum(s) from t", new String [][] { {"1600"} } },
		{ "select sum(d) from t", new String [][] { {"2900.0"} } },
		{ "select sum(l) from t", new String [][] { {"16000000"} } },
		{ "select sum(r) from t", new String [][] { {"2900.0"} } },
		{ "select sum(dc) from t", new String [][] { {"1888.87"} } },
		{ "select sum(i) from t group by i", new String [][] { {"0"}, {"1"}, {null} } },
		{ "select sum(s) from t group by s", new String [][] { {"1400"}, {"200"}, {null} } },
		{ "select sum(d) from t group by d", new String [][] { {"100.0"}, {"2800.0"}, {null} } },
		{ "select sum(l) from t group by l", new String [][] { {"14000000"}, {"2000000"}, {null} } },
		{ "select sum(r) from t group by r", new String [][] { {"100.0"}, {"2800.0"}, {null} } },
		{ "select sum(dc) from t group by dc", new String [][] { {"1444.43"}, {"444.44"}, {null} } },
		{ "select sum(1) from t", new String [][] { {"17"} } },
		{ "select sum(1.1)  from t", new String [][] { {"18.7"} } },
		{ "select sum(1e1)   from t", new String [][] { {"170.0"} } },
		{ "select sum(1) from t group by i", new String [][] { {"14"}, {"1"}, {"2"} } },
		{ "select sum(1.1)  from t group by r", new String [][] { {"1.1"}, {"15.4"}, {"2.2"} } },
		{ "select sum(1e1)   from t group by r", new String [][] { {"10.0"}, {"140.0"}, {"20.0"} } },
		{ "select sum(i), sum(l), sum(r) from t group by i, dt, b", new String [][] {
			{"0","13000000", "2300.0"},
			{"0","1000000", "200.0"},
			{"0","1000000", "200.0"},
			{"1","1000000", "200.0"}, {null,null,null} } },
		{ "select i, dt, sum(i), sum(r), sum(l), l from t group by i, dt, b, l", new String [][] {
			{"0","1992-01-01","0","2100.0","11000000", "1000000"},
			{"0","1992-01-01","0","200.0","2000000", "2000000"}, 
			{"0","1992-01-01","0","200.0","1000000", "1000000"}, 
			{"0","1992-09-09","0","200.0","1000000", "1000000"}, 
			{"1","1992-01-01","1","200.0","1000000", "1000000"}, 
			{null,null,null,null,null,null} } },            
		{ "select sum(expr1), sum(expr2) from (select i * s, r * 2 from t) t (expr1, expr2) group by expr2, expr1", new String [][] {
			{"0","200.0"}, {"0","5200.0"}, {"100","400.0"}, {null,null} } },
		{ "select distinct sum(i) from t group by i, dt", new String [][] { {"0"}, {"1"}, {null} } },
		{ "create table tmp (x int, y smallint)", null },
		//{ "insert into tmp (x, y) select sum(i), sum(s) from t", null },  // Not supported on partitioned regions
		//{ "select * from tmp", new String [][] { {"1", "1600"} } },
		//{ "insert into tmp (x, y) select sum(i), sum(s) from t group by b", null },
		//{ "select * from tmp", new String [][] { {"1", "1600"}, {"1", "1500"}, {"0", "100"}, {null,null} } },
		{ "drop table tmp", null },
		// overflow
		{ "create table tmp (x int)", null },
		{ "insert into tmp values (2147483647),(2147483647)", null },
		// FIXME 
		// This does not return an overflow, it returns results! GFXD command line returns an overflow (22003) error as expected
		//{ "select sum(x) from tmp", "22003"},
		{ "drop table tmp", null },
		{ "create table tmp (x double precision)", null },
		{ "insert into tmp values (2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),(2147483647),            (2147483647),(2147483647)", null },
		{ "select sum(x) from tmp", new String [][] { {"1.9327352823E10"} } },
		{ "drop table tmp", null },
		{ "drop table t", null },
		{ "drop table empty", null },
		// MAX
		{ "create table t (i int, s smallint, l bigint,	c char(10), v varchar(50), d double precision, r real, dt date, t time, ts timestamp,	b char(2) for bit data, bv varchar(8) for bit data, dc decimal(5,2))", null },
		{ "create table empty (i int, s smallint, l bigint,c char(10), v varchar(50), d double precision, r real, dt date, t time, ts timestamp,b char(2) for bit data, bv varchar(8) for bit data, dc decimal(5,2))", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0,  date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0,  date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (1, 100, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0,  date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 200, 1000000, 'duplicate', 'this is duplicated',  200.0e0, 200.0e0,  date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 222.22)", null },
		{ "insert into t values (0, 100, 2000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 222.22)", null },
		{ "insert into t values (0, 100, 1000000, 'goodbye', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'noone is here', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 100.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 100.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-09-09'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:55:55'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:55:55'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'ffff', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'1111111111111111', 111.11)", null },
		{ "create table t1 (c1 long varchar)", null },
		{ "select max(c1) from t1", new String[][] { {null} } },   // GemFireXD allows MAX(LVC)
		{ "drop table t1", null },
		{ "select max(i) from empty", new String [][] { {null} } },
		{ "select max(s) from empty", new String [][] { {null} } },
		{ "select max(l) from empty", new String [][] { {null} } },
		{ "select max(c) from empty", new String [][] { {null} } },
		{ "select max(v) from empty", new String [][] { {null} } },
		{ "select max(d) from empty", new String [][] { {null} } },
		{ "select max(r) from empty", new String [][] { {null} } },
		{ "select max(dt) from empty", new String [][] { {null} } },
		{ "select max(t) from empty", new String [][] { {null} } },
		{ "select max(ts) from empty", new String [][] { {null} } },
		{ "select max(b) from empty", new String [][] { {null} } },
		{ "select max(bv) from empty", new String [][] { {null} } },
		{ "select max(dc) from empty", new String [][] { {null} } },
		{ "select max(i), max(b), max(i), max(s) from empty", new String [][] { {null,null,null,null} } },
		{ "select max(i+1) from empty", new String [][] { {null} } },
		{ "select max(i) from empty group by i", new String[0][0] },
		{ "select max(s) from empty group by s", new String[0][0] },
		{ "select max(l) from empty group by l", new String[0][0] },
		{ "select max(c) from empty group by c", new String[0][0] },
		{ "select max(v) from empty group by v", new String[0][0] },
		{ "select max(d) from empty group by d", new String[0][0] },
		{ "select max(r) from empty group by r", new String[0][0] },
		{ "select max(dt) from empty group by dt", new String[0][0] },
		{ "select max(t) from empty group by t", new String[0][0] },
		{ "select max(ts) from empty group by ts", new String[0][0] },
		{ "select max(b) from empty group by b", new String[0][0] },
		{ "select max(bv) from empty group by bv", new String[0][0] },
		{ "select max(dc) from empty group by dc", new String[0][0] },
		{ "select max(i) from t", new String [][] { {"1"} } },
		{ "select max(s) from t", new String [][] { {"200"} } },
		{ "select max(l) from t", new String [][] { {"2000000"} } },
		{ "select max(c) from t", new String [][] { {"goodbye"} } },
		{ "select max(v) from t", new String [][] { {"this is duplicated"} } },
		{ "select max(d) from t", new String [][] { {"200.0"} } },
		{ "select max(r) from t", new String [][] { {"200.0"} } },
		{ "select max(dt) from t", new String [][] { {"1992-09-09"} } },
		{ "select max(t) from t", new String [][] { {"12:55:55"} } },
		{ "select max(ts) from t", new String [][] { {"1992-01-01 12:55:55.0"} } },
		{ "select max(b) from t", new String [][] { {"ffff"} } },
		{ "select max(bv) from t", new String [][] { {"1111111111111111"} } },
		{ "select max(dc) from t", new String [][] { {"222.22"} } },
		{ "select max(i) from t group by i", new String [][] { {"0"}, {"1"}, {null} } },
		{ "select max(s) from t group by s", new String [][] { {"100"}, {"200"}, {null} } },
		{ "select max(l) from t group by l", new String [][] { {"1000000"}, {"2000000"}, {null} } },
		{ "select max(c) from t group by c", new String [][] { {"duplicate"}, {"goodbye"}, {null} } },
		{ "select max(v) from t group by v", new String [][] { {"noone is here"}, {"this is duplicated"}, {null} } },
		{ "select max(d) from t group by d", new String [][] { {"100.0"}, {"200.0"}, {null} } },
		{ "select max(r) from t group by r", new String [][] { {"100.0"}, {"200.0"}, {null} } },
		{ "select max(dt) from t group by dt", new String [][] { {"1992-01-01"}, {"1992-09-09"}, {null } } },
		{ "select max(t) from t group by t", new String [][] { {"12:30:30"}, {"12:55:55"}, {null} } },
		{ "select max(ts) from t group by ts", new String [][] { {"1992-01-01 12:30:30.0"}, {"1992-01-01 12:55:55.0"}, {null} } },
		{ "select max(b) from t group by b", new String [][] { {"12af"}, {"ffff"}, {null} } },
		{ "select max(bv) from t group by bv", new String [][] { {"0000111100001111"}, {"1111111111111111"}, {null} } },
		{ "select max(dc) from t group by dc", new String [][] { {"111.11"}, {"222.22"}, {null} } },
		{ "select max(1) from t", new String [][] { {"1"} } },
		{ "select max('hello')  from t", new String [][] { {"hello"} } },
		{ "select max(1.1)   from t", new String [][] { {"1.1"} } },
		{ "select max(1e1)    from t", new String [][] { {"10.0"} } },
		{ "select max(X'11')     from t", new String [][] { {"11"} } },
		{ "select max(date('1999-06-06')) from t", new String [][] { {"1999-06-06"} } },
		{ "select max(time('12:30:30')) from t", new String [][] { {"12:30:30"} } },
		{ "select max(timestamp('1999-06-06 12:30:30')) from t", new String [][] { {"1999-06-06 12:30:30.0"} } },
		{ "select max(1) from t group by i", new String [][] { {"1"}, {"1"}, {"1"} } },
		{ "select max('hello')  from t group by c", new String [][] { {"hello"}, {"hello"}, {"hello"} } },
		{ "select max(1.1)   from t group by dc", new String [][] { {"1.1"}, {"1.1"}, {"1.1"} } },
		{ "select max(1e1)    from t group by d", new String [][] { {"10.0"}, {"10.0"}, {"10.0"} } },
		{ "select max(X'11')     from t group by b", new String [][] { {"11"}, {"11"}, {"11"} } },
		{ "select max(date('1999-06-06')) from t group by dt", new String [][] { {"1999-06-06"}, {"1999-06-06"}, {"1999-06-06"} } },
		{ "select max(time('12:30:30')) from t group by t", new String [][] { {"12:30:30"}, {"12:30:30"}, {"12:30:30"} } },
		{ "select max(timestamp('1999-06-06 12:30:30')) from t group by ts", new String [][] { {"1999-06-06 12:30:30.0"}, {"1999-06-06 12:30:30.0"}, {"1999-06-06 12:30:30.0"} } },
		{ "select max(i), max(dt), max(b) from t group by i, dt, b", new String [][] {
			{"0", "1992-01-01", "12af"},
			{"0", "1992-01-01", "ffff"}, 
			{"0", "1992-09-09", "12af"},
			{"1", "1992-01-01", "12af"},
			{null,null,null} } },
		{ "select l, dt, max(i), max(dt), max(b), i from t group by i, dt, b, l", new String [][] {
			{"1000000","1992-01-01","0","1992-01-01","12af","0"},          
			{"2000000","1992-01-01","0","1992-01-01","12af","0"},
			{"1000000","1992-01-01","0","1992-01-01","ffff","0"},
			{"1000000","1992-09-09","0","1992-09-09","12af","0"},
			{"1000000","1992-01-01","1","1992-01-01","12af","1"},
			{null,null,null,null,null,null} } },
		{ "select max(expr1), max(expr2) from (select i * s, c || v from t) t (expr1, expr2) group by expr2, expr1", new String [][] {
			{"0","duplicate noone is here"}, {"0", "duplicate this is duplicated"}, 
			{"100","duplicate this is duplicated"}, {"0","goodbye   this is duplicated"}, {null,null} } },
		{ "select distinct max(i) from t group by i, dt", new String [][] { {"0"}, {"1"}, {null} } },
		{ "create table tmp (x int, y char(20))", null },
		//{ "insert into tmp (x, y) select max(i), max(c) from t", null },  // Not supported
		//{ "select * from tmp", new String [][] { {"1", "goodbye"} } },
		//{ "insert into tmp (x, y) select max(i), max(c) from t group by b", null },
		//{ "select * from tmp", new String [][] { {"1", "goodbye"}, {"1","goodbye"}, {"0", "duplicate"}, {null,null} } },
		{ "drop table tmp", null },
		{ "drop table t", null },
		{ "drop table empty", null },
		// MIN
		{ "create table t (i int, s smallint, l bigint,c char(10), v varchar(50), d double precision, r real, dt date, t time, ts timestamp,	b char(2) for bit data, bv varchar(8) for bit data, dc decimal(5,2))", null },
		{ "create table empty (i int, s smallint, l bigint,c char(10), v varchar(50), d double precision, r real, 	dt date, t time, ts timestamp,b char(2) for bit data, bv varchar(8) for bit data, dc decimal(5,2))", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t (i) values (null)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (1, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 200, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 222.22)", null },
		{ "insert into t values (0, 100, 2000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 222.22)", null },
		{ "insert into t values (0, 100, 1000000, 'goodbye', 'this is duplicated', 200.0e0, 200.0e0,  date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'noone is here', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000,'duplicate', 'this is duplicated', 100.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 100.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-09-09'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:55:55'), timestamp('1992-01-01 12:30:30'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:55:55'), X'12af', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'ffff', X'0000111100001111', 111.11)", null },
		{ "insert into t values (0, 100, 1000000, 'duplicate', 'this is duplicated', 200.0e0, 200.0e0, date('1992-01-01'), time('12:30:30'), timestamp('1992-01-01 12:30:30'), X'12af', X'1111111111111111', 111.11)", null },
		{ "create table t1 (c1 long varchar)", null },
		{ "select min(c1) from t1", new String[][] { {null} } },   // GemFireXD allows MAX(LVC)
		{ "drop table t1", null },
		{ "select min(i) from empty", new String [][] { {null} } },
		{ "select min(s) from empty", new String [][] { {null} } },
		{ "select min(l) from empty", new String [][] { {null} } },
		{ "select min(c) from empty", new String [][] { {null} } },
		{ "select min(v) from empty", new String [][] { {null} } },
		{ "select min(d) from empty", new String [][] { {null} } },
		{ "select min(r) from empty", new String [][] { {null} } },
		{ "select min(dt) from empty", new String [][] { {null} } },
		{ "select min(t) from empty", new String [][] { {null} } },
		{ "select min(ts) from empty", new String [][] { {null} } },
		{ "select min(b) from empty", new String [][] { {null} } },
		{ "select min(bv) from empty", new String [][] { {null} } },
		{ "select min(dc) from empty", new String [][] { {null} } },
		{ "select min(i), min(b), min(i), min(s) from empty", new String [][] { {null,null,null,null} } },
		{ "select min(i+1) from empty", new String [][] { {null} } },
		{ "select min(i) from empty group by i", new String [0][0] },
		{ "select min(s) from empty group by s", new String [0][0] },
		{ "select min(l) from empty group by l", new String [0][0] },
		{ "select min(c) from empty group by c", new String [0][0] },
		{ "select min(v) from empty group by v", new String [0][0] },
		{ "select min(d) from empty group by d", new String [0][0] },
		{ "select min(r) from empty group by r", new String [0][0] },
		{ "select min(dt) from empty group by dt", new String [0][0] },
		{ "select min(t) from empty group by t", new String [0][0] },
		{ "select min(ts) from empty group by ts", new String [0][0] },
		{ "select min(b) from empty group by b", new String [0][0] },
		{ "select min(bv) from empty group by bv", new String [0][0] },
		{ "select min(dc) from empty group by dc", new String [0][0] },
		{ "select min(i) from t", new String [][] { {"0"} } },
		{ "select min(s) from t", new String [][] { {"100"} } },
		{ "select min(l) from t", new String [][] { {"1000000"} } },
		{ "select min(c) from t", new String [][] { {"duplicate"} } },
		{ "select min(v) from t", new String [][] { {"noone is here"} } },
		{ "select min(d) from t", new String [][] { {"100.0"} } },
		{ "select min(r) from t", new String [][] { {"100.0"} } },
		{ "select min(dt) from t", new String [][] { {"1992-01-01"} } },
		{ "select min(t) from t", new String [][] { {"12:30:30"} } },
		{ "select min(ts) from t", new String [][] { {"1992-01-01 12:30:30.0"} } },
		{ "select min(b) from t", new String [][] { {"12af"} } },
		{ "select min(bv) from t", new String [][] { {"0000111100001111"} } },
		{ "select min(dc) from t", new String [][] { {"111.11"} } },
		{ "select min(i) from t group by i", new String [][] { {"0"},{"1"},{null} } },
		{ "select min(s) from t group by s", new String [][] { {"100"}, {"200"}, {null} } },
		{ "select min(l) from t group by l", new String [][] { {"1000000"}, {"2000000"}, {null} } },
		{ "select min(c) from t group by c", new String [][] { {"duplicate"}, {"goodbye"}, {null} } },
		{ "select min(v) from t group by v", new String [][] { {"noone is here"}, {"this is duplicated"}, {null} } },
		{ "select min(d) from t group by d", new String [][] { {"100.0"}, {"200.0"}, {null} } },
		{ "select min(r) from t group by r", new String [][] { {"100.0"}, {"200.0"}, {null} } },
		{ "select min(dt) from t group by dt", new String [][] { {"1992-01-01"}, {"1992-09-09"}, {null} } },
		{ "select min(t) from t group by t", new String [][] { {"12:30:30"}, {"12:55:55"}, {null} } },
		{ "select min(ts) from t group by ts", new String [][] { {"1992-01-01 12:30:30.0"}, {"1992-01-01 12:55:55.0"}, {null} } },
		{ "select min(b) from t group by b", new String [][] { {"12af"}, {"ffff"}, {null} } },
		{ "select min(bv) from t group by bv", new String [][] { {"0000111100001111"}, {"1111111111111111"}, {null} } },
		{ "select min(dc) from t group by dc", new String [][] { {"111.11"}, {"222.22"}, {null} } },
		{ "select min(1) from t", new String [][] { {"1"} } },
		{ "select min('hello')  from t", new String [][] { {"hello"} } },
		{ "select min(1.1)   from t", new String [][] { {"1.1"} } },
		{ "select min(1e1)    from t", new String [][] { {"10.0"} } },
		{ "select min(X'11')     from t", new String [][] { {"11"} } },
		{ "select min(date('1999-06-06')) from t", new String [][] { {"1999-06-06"} } },
		{ "select min(time('12:30:30')) from t", new String [][] { {"12:30:30"} } },
		{ "select min(timestamp('1999-06-06 12:30:30')) from t", new String [][] { {"1999-06-06 12:30:30.0"} } },
		{ "select min(1) from t group by i", new String [][] { {"1"}, {"1"}, {"1"} } },
		{ "select min('hello')  from t group by c", new String [][] { {"hello"}, {"hello"}, {"hello"} } },
		{ "select min(1.1)   from t group by dc", new String [][] { {"1.1"}, {"1.1"}, {"1.1"} } },
		{ "select min(1e1)    from t group by d", new String [][] { {"10.0"}, {"10.0"}, {"10.0"} } },
		{ "select min(X'11')     from t group by b", new String [][] { {"11"}, {"11"}, {"11"} } },
		{ "select min(date('1999-06-06')) from t group by dt", new String [][] { {"1999-06-06"}, {"1999-06-06"}, {"1999-06-06"} } },
		{ "select min(time('12:30:30')) from t group by t", new String [][] { {"12:30:30"}, {"12:30:30"}, {"12:30:30"} } },
		{ "select min(timestamp('1999-06-06 12:30:30')) from t group by ts", new String [][] { {"1999-06-06 12:30:30.0"}, {"1999-06-06 12:30:30.0"}, {"1999-06-06 12:30:30.0"} } },
		{ "select min(i), min(dt), min(b) from t group by i, dt, b", new String [][] {
			{"0", "1992-01-01", "12af"},
			{"0", "1992-01-01", "ffff"},
			{"0", "1992-09-09", "12af"},
			{"1", "1992-01-01", "12af"},
			{null,null,null} } },
		{ "select l, dt, min(i), min(dt), min(b), i from t group by i, dt, b, l", new String [][] {
			{"1000000","1992-01-01","0","1992-01-01","12af","0"},
			{"2000000","1992-01-01","0","1992-01-01","12af","0"},
			{"1000000","1992-01-01","0","1992-01-01","ffff","0"},
			{"1000000","1992-09-09","0","1992-09-09","12af","0"},
			{"1000000","1992-01-01","1","1992-01-01","12af","1"},
			{null,null,null,null,null,null} } },
		{ "select min(expr1), min(expr2) from (select i * s, c || v from t) t (expr1, expr2) group by expr2, expr1", new String [][] {
			{"0","duplicate noone is here"}, {"0","duplicate this is duplicated"}, {"100","duplicate this is duplicated"},
			{"0","goodbye   this is duplicated"}, {null,null} } }, 
		{ "select distinct min(i) from t group by i, dt", new String [][] { {"0"}, {"1"}, {null} } },
		{ "create table tmp (x int, y char(20))", null },
		//{ "insert into tmp (x, y) select min(i), min(c) from t", null },   // not supported
		//{ "select * from tmp", new String [][] {
	    //   {"0","duplicate"} } },
		//{ "insert into tmp (x, y) select min(i), min(c) from t group by b", null },
		//{ "select * from tmp", new String [][] {
	    //   {"0","duplicate"},
		//  {"0","duplicate"},
		//  {"0","duplicate"}, {null,null} } },
		{ "drop table tmp", null},
		{ "drop table t", null},
		{ "drop table empty", null}
	    };

	    // Start 1 client and 3 servers, use default partitioning
	    startVMs(1, 3);
	    Connection conn = TestUtil.getConnection();
	    Statement s = conn.createStatement();
	    // Go through the array, execute each string[0], check sqlstate [1]
	    // This will fail on the first one that succeeds where it shouldn't
	    // or throws unknown exception
	    JDBC.SQLUnitTestHelper(s,Script_AggBuiltInUT);
	  }
}
